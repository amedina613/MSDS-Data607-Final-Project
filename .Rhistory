library(dplyr)
library(dbplyr)
library(RPostgres)
library(tidyverse)
library(geojsonio)
library(RCurl)
library(tidyr)
library(reshape2)
library(geojsonR)
library(ggplot2)
library(sf)
library(Hmisc)
library(RMySQL)
vectorpass <- c('t','h','e','q','u','i','c','k','b','r','o','w','n','f','o','x','j','u','m','p','o','v','e','r','l','a','z','y','d','o','g','0','1','2','3','4','5','6','7','8','9',".")
#list of alphanumeric characters to make the password into a simple code.
pass = paste(vectorpass[8],vectorpass[3],vectorpass[6],vectorpass[1],vectorpass[2],vectorpass[42],vectorpass[29],vectorpass[3],vectorpass[13],vectorpass[6],vectorpass[22],vectorpass[11],vectorpass[36],vectorpass[41],sep="")
#constructing the password from the list
mysqlconnection <- dbConnect(RMySQL::MySQL(),
host="cunydata607sql.mysql.database.azure.com",
dbname = "keith.denivo49",
port=3306,
user="keith.denivo49",
password=pass)
#connecting to database.
src_dbi(mysqlconnection)
#lists all the tables in the database with tbls.
library(dplyr)
library(dbplyr)
library(RPostgres)
library(tidyverse)
library(geojsonio)
library(RCurl)
library(tidyr)
library(reshape2)
library(geojsonR)
library(ggplot2)
library(sf)
library(Hmisc)
library(RMySQL)
vectorpass <- c('t','h','e','q','u','i','c','k','b','r','o','w','n','f','o','x','j','u','m','p','o','v','e','r','l','a','z','y','d','o','g','0','1','2','3','4','5','6','7','8','9',".")
#list of alphanumeric characters to make the password into a simple code.
pass = paste(vectorpass[8],vectorpass[3],vectorpass[6],vectorpass[1],vectorpass[2],vectorpass[42],vectorpass[29],vectorpass[3],vectorpass[13],vectorpass[6],vectorpass[22],vectorpass[11],vectorpass[36],vectorpass[41],sep="")
#constructing the password from the list
mysqlconnection <- dbConnect(RMySQL::MySQL(),
host="cunydata607sql.mysql.database.azure.com",
dbname = "keith.denivo49",
port=3306,
user="keith.denivo49",
password=pass)
#connecting to database.
src_dbi(mysqlconnection)
#lists all the tables in the database with tbls.
c <- getURL("https://raw.githubusercontent.com/amedina613/MSDS-Data607-Final-Project/main/National_Obesity_By_State.geojson")
#geojson file stored temporary
tmp_geojson <- tempfile(fileext = ".geojson")
download.file(
"https://raw.githubusercontent.com/amedina613/MSDS-Data607-Final-Project/main/National_Obesity_By_State.geojson",
tmp_geojson
)
#use sf library to read geojson
obesity_geojson_sf <- read_sf(tmp_geojson)
#graph geojson
ggplot(obesity_geojson_sf) +
geom_sf(fill = "#69b3a2", color = "black") +
theme_void()
glimpse(obesity_geojson_sf)
class(obesity_geojson_sf)
#extract the obesity % for each state
state_obesity_df <- obesity_geojson_sf |>
select(NAME, Obesity)
state_obesity_df <- as.data.frame(state_obesity_df)
state_obesity_df <-  subset(state_obesity_df, select = -c(geometry) )
glimpse(state_obesity_df)
state_info_df <- read_csv("https://raw.githubusercontent.com/amedina613/MSDS-Data607-Final-Project/main/Population%20%26%20Abbreviation%20%26%20Income.csv")
glimpse(state_info_df)
colnames(state_obesity_df)[colnames(state_obesity_df) == 'NAME'] <- 'State'
state_obesity_info_df <- merge(state_info_df,state_obesity_df,by="State")
glimpse(state_obesity_info_df)
#Obesity % vs Median income
ggplot(state_obesity_info_df, aes(x = state_obesity_info_df$`Median Income`, y = state_obesity_info_df$Obesity))+
geom_point()+
geom_smooth(method= lm)
mod1 = lm(formula = state_obesity_info_df$Obesity ~ state_obesity_info_df$'Median Income', data = state_obesity_info_df)
summary(mod1)
restaurant_df <- read_csv("https://raw.githubusercontent.com/amedina613/MSDS-Data607-Final-Project/main/Fast_Food_Restaurants.csv")
unique(restaurant_df$province)
number_restaurants_df <- as.data.frame(table(unlist(restaurant_df$province)))
conn <-  mysqlconnection
con <- mysqlconnection
#table was created
dbWriteTable(conn = con,
name = "restaurant_df",
value = restaurant_df,
overwrite = TRUE)
dbWriteTable(conn = con,
name = "state_info_df",
value = state_info_df,
overwrite = TRUE)
dbWriteTable(conn = con,
name = "state_obesity_df",
value = state_obesity_df,
overwrite = TRUE)
src_dbi(mysqlconnection)
View(state_obesity_df)
View(state_obesity_df)
View(state_obesity_info_df)
View(state_obesity_df)
View(state_obesity_info_df)
library(dplyr)
library(dbplyr)
library(RPostgres)
library(tidyverse)
library(geojsonio)
library(RCurl)
library(tidyr)
library(reshape2)
library(geojsonR)
library(ggplot2)
library(sf)
library(Hmisc)
library(RMySQL)
vectorpass <- c('t','h','e','q','u','i','c','k','b','r','o','w','n','f','o','x','j','u','m','p','o','v','e','r','l','a','z','y','d','o','g','0','1','2','3','4','5','6','7','8','9',".")
#list of alphanumeric characters to make the password into a simple code.
pass = paste(vectorpass[8],vectorpass[3],vectorpass[6],vectorpass[1],vectorpass[2],vectorpass[42],vectorpass[29],vectorpass[3],vectorpass[13],vectorpass[6],vectorpass[22],vectorpass[11],vectorpass[36],vectorpass[41],sep="")
#constructing the password from the list
mysqlconnection <- dbConnect(RMySQL::MySQL(),
host="cunydata607sql.mysql.database.azure.com",
dbname = "keith.denivo49",
port=3306,
user="keith.denivo49",
password=pass)
#connecting to database.
src_dbi(mysqlconnection)
#lists all the tables in the database with tbls.
c <- getURL("https://raw.githubusercontent.com/amedina613/MSDS-Data607-Final-Project/main/National_Obesity_By_State.geojson")
#geojson file stored temporary
tmp_geojson <- tempfile(fileext = ".geojson")
download.file(
"https://raw.githubusercontent.com/amedina613/MSDS-Data607-Final-Project/main/National_Obesity_By_State.geojson",
tmp_geojson
)
#use sf library to read geojson
obesity_geojson_sf <- read_sf(tmp_geojson)
#graph geojson
ggplot(obesity_geojson_sf) +
geom_sf(fill = "#69b3a2", color = "black") +
theme_void()
glimpse(obesity_geojson_sf)
class(obesity_geojson_sf)
#extract the obesity % for each state
state_obesity_df <- obesity_geojson_sf |>
select(NAME, Obesity)
state_obesity_df <- as.data.frame(state_obesity_df)
state_obesity_df <-  subset(state_obesity_df, select = -c(geometry) )
glimpse(state_obesity_df)
state_info_df <- read_csv("https://raw.githubusercontent.com/amedina613/MSDS-Data607-Final-Project/main/Population%20%26%20Abbreviation%20%26%20Income.csv")
glimpse(state_info_df)
colnames(state_obesity_df)[colnames(state_obesity_df) == 'NAME'] <- 'State'
state_obesity_info_df <- merge(state_info_df,state_obesity_df,by="State")
glimpse(state_obesity_info_df)
#Obesity % vs Median income
ggplot(state_obesity_info_df, aes(x = state_obesity_info_df$`Median Income`, y = state_obesity_info_df$Obesity))+
geom_point()+
geom_smooth(method= lm)
mod1 = lm(formula = state_obesity_info_df$Obesity ~ state_obesity_info_df$'Median Income', data = state_obesity_info_df)
summary(mod1)
restaurant_df <- read_csv("https://raw.githubusercontent.com/amedina613/MSDS-Data607-Final-Project/main/Fast_Food_Restaurants.csv")
unique(restaurant_df$province)
number_restaurants_df <- as.data.frame(table(unlist(restaurant_df$province)))
conn <-  mysqlconnection
con <- mysqlconnection
#table was created
dbWriteTable(conn = con,
name = "restaurant_df",
value = restaurant_df,
overwrite = TRUE)
dbWriteTable(conn = con,
name = "state_info_df",
value = state_info_df,
overwrite = TRUE)
dbWriteTable(conn = con,
name = "state_obesity_df",
value = state_obesity_df,
overwrite = TRUE)
dbWriteTable(conn = con,
name = "number_restaurants_df",
value = number_restaurants_df,
overwrite = TRUE)
dbWriteTable(conn = con,
name = "state_obesity_info_df",
value = state_obesity_info_df,
overwrite = TRUE)
src_dbi(mysqlconnection)
